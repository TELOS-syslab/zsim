sim = {
  maxTotalInstrs = 900000000000L;
  phaseLength = 10000;
  schedQuantum = 50;
  gmMBytes = 16384;
  enableTLB = false;
  enableRandom = false;
  pinOptions = "-ifeellucky -pause_tool 0"; 
  attachDebugger = false;
  logToFile = true;
  printHierarchy = true;
  statsPhaseInterval = 200;
  outputPhaseInterval = 2000;
};
sys = {
  cores = 
  {
    skylake = 
    {
      cores = 16;
      type = "OOO";
      icache = "l1i";
      dcache = "l1d";
    };
  };
  frequency = 3200;
  lineSize = 64;
  networkFile = "";
  caches = 
  {
    l1d = 
    {
      children = "";
      isPrefetcher = false;
      size = 65536;
      banks = 1;
      caches = 16;
      type = "Simple";
      array = 
      {
        ways = 8;
        type = "SetAssoc";
        hash = "None";
      };
      repl = 
      {
        type = "LRU";
      };
      latency = 1;
      nonInclusiveHack = false;
    };
    l1i = 
    {
      children = "";
      isPrefetcher = false;
      size = 32768;
      banks = 1;
      caches = 16;
      type = "Simple";
      array = 
      {
        ways = 4;
        type = "SetAssoc";
        hash = "None";
      };
      repl = 
      {
        type = "LRU";
      };
      latency = 1;
      nonInclusiveHack = false;
    };
    l2 = 
    {
      children = "l1i|l1d";
      isPrefetcher = false;
      size = 1048576;
      banks = 1;
      caches = 16;
      type = "Simple";
      array = 
      {
        ways = 8;
        type = "SetAssoc";
        hash = "None";
      };
      repl = 
      {
        type = "LRU";
      };
      latency = 9;
      nonInclusiveHack = false;
    };
    l3 = 
    {
      children = "l2";
      isPrefetcher = false;
      size = 16777216;
      banks = 16;
      caches = 1;
      type = "Timing";
      array = 
      {
        ways = 16;
        type = "SetAssoc";
        hash = "H3";
      };
      repl = 
      {
        type = "LRU";
      };
      latency = 38;
      nonInclusiveHack = false;
    };
  };
  mem = {
    splitAddrs = false;
    enableTrace = false;
    mapGranu = 64;
    page_size = 4096;
    pagemap_scheme = "JohnnyRandom";
    controllers = 1;
    type = "DramCache";
    # cache_scheme= AlloyCache, BansheeCache, UnisonCache, CacheOnly, CopyCache, NoCache, NDC
    cache_scheme = "IdealBalanced";
    bwBalance = false;
    ext_dram = {
      type = "DDR";
      configIni = "tests/configs/dramsim3-cxl-DDR4_2Gb_x8_3200.ini";
      outputDir = "output/mem";
      traceName = ".";
      latency = 128; # DDR4-3200: 0.625ns/cycle, 80ns = 128 cycles
      controllerLatency = 128;
      size = 32768;
      # type = "DDR";
      # ranksPerChannel = 4;
      # banksPerRank = 8;
    };
    mcdram = {
      type = "DDR";
      configIni = "tests/configs/dramsim3-dram-DDR4_1Gb_x8_3200.ini";
      outputDir = "output/mem";
      traceName = ".";
      latency = 40; # CHA<->MC<->DRAM
      controllerLatency = 40;
      cache_granularity = 64;
      # size = 4096;
      size = 4096;
      mcdramPerMC = 1;
      num_ways = 0;
      sampleRate = 1.0;
    };
  };
};
# process0 = { command = "ls -alh --color /home/"; };
process0 = {
  command = "$CONDA_PREFIX/bin/python $DLRM_SYSTEM/models/models/recommendation/pytorch/dlrm/product/dlrm_s_pytorch.py \
    --data-generation=prod,$DLRM_SYSTEM/datasets/reuse_low/table_1M.txt,1000000 \
    --round-targets=True \
    --learning-rate=1.0 \
    --arch-mlp-bot=256-128-128 \
    --arch-mlp-top=128-64-1 \
    --arch-sparse-feature-size=128 \
    --max-ind-range=40000000 \
    --numpy-rand-seed=727 \
    --ipex-interaction \
    --inference-only \
    --num-batches=50000 \
    --data-size=100000000 \
    --num-indices-per-lookup=120 \
    --num-indices-per-lookup-fixed=True \
    --arch-embedding-size=1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000 \
    --print-freq=10 \
    --print-time \
    --mini-batch-size=8 \
    --share-weight-instance=1"; 
  startFastForwarded = true;
  # syncedFastForward = "Always";
  ffiPoints ="5000000000 100000000000 1000";
  env = "OMP_NUM_THREADS=1 \
    CONDA_PREFIX=/home/zjq/anaconda3/envs/dlrm_cpu \
    DLRM_SYSTEM=/mnt/sdb3/data/benchmark/dlrm/dlrm/reproduce_isca23_cpu_DLRM_inference";
};