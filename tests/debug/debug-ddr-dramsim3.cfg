sys = {
  cores = {
    c = {
      cores = 1;
      type = "OOO";
      dcache = "l1d";
      icache = "l1i";
    };
  };

  caches = {
    l1d = {
      array = {
        type = "SetAssoc";
        ways = 8;
      };
      caches = 1;
      latency = 1;
      size = 32768;
    };
    
    l1i = {
      array = {
        type = "SetAssoc";
        ways = 4;
      };
      caches = 1;
      latency = 1;
      size = 32768;
    };

    l2 = {
      array = {
        type = "SetAssoc";
        ways = 8;
      };
      caches = 1;
      latency = 4;
      size = 131072;
      children = "l1i|l1d";
    };

    l3 = {
      array = {
        hash = "H3";
        type = "SetAssoc";
        ways = 16;
      };
      type = "Timing";
      banks = 4;
      caches = 1;
      latency = 27;
      #size = 16777216;
      #size = 4194304;
      size = 8388608;
      children = "l2";
    };
  };
  
  frequency = 2700;
  lineSize = 64;
  mem = {
    splitAddrs = false;
    enableTrace = false;
	  mapGranu = 64;
    controllers = 1;
    type = "DramCache";
	  # cache_scheme: AlloyCache, BansheeCache, UnisonCache, CacheOnly, NoCache
	  cache_scheme = "AlloyCache";
    ext_dram = {
      type = "DRAMSim3";
      configIni = "lib/dramsim3/configs/DDR4_8Gb_x8_2400.ini";
      outputDir = "output/mem";
      traceName = ".";
    };
    mcdram = {
      type = "DDR";
      ; type = "DRAMSim3";
      ; configIni = "lib/dramsim3/configs/DDR4_8Gb_x8_2400.ini";
      ; outputDir = "output/mem";
      ; traceName = ".";
      ranksPerChannel = 4;
      banksPerRank = 8;
      cache_granularity = 64;
      size = 512;
      mcdramPerMC = 1;
      num_ways = 1;
      sampleRate = 1.0;
      # placementPolicy: LRU, FBR 
      placementPolicy = "LRU";
    };
  };
};

sim = {
  maxTotalInstrs = 100000000000L;
  phaseLength = 10000;
  schedQuantum = 50;
  gmMBytes = 8192;
  enableTLB = true;
  enableJonny = true;
  pinOptions = "-ifeellucky -pause_tool 1"; 
  attachDebugger = true;
  logToFile = true;
  printHierarchy = true;
};

process0 = { command = "ls"; };
# process1 = { command = "ls"; };
